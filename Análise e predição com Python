{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyP7WBgixZtEypPMyaZo8PhL",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Sabr2na/Projeto1-/blob/main/An%C3%A1lise%20de%20dados%20Smart%20neg%C3%B3cios%20com%20Python%20-%20Predi%C3%A7%C3%A3o.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LrHVnki_bbs2",
        "outputId": "bafa3efc-82ab-4802-f8a3-3e40b2cc6bc6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(   idtransação datatransacao  tipotransacao montantetransacao  idcliente  \\\n",
              " 0            1    04/01/2024         Compra            R$ 150        101   \n",
              " 1            2    04/05/2024          Venda            R$ 300        102   \n",
              " 2            3    04/10/2024  Transferência            R$ 500        103   \n",
              " 3            4    04/15/2024         Compra            R$ 200        101   \n",
              " 4            5    04/20/2024          Venda            R$ 450        104   \n",
              " \n",
              "    Unnamed: 5  Unnamed: 6  Unnamed: 7  Unnamed: 8  Unnamed: 9  ...  \\\n",
              " 0         NaN         NaN         NaN         NaN         NaN  ...   \n",
              " 1         NaN         NaN         NaN         NaN         NaN  ...   \n",
              " 2         NaN         NaN         NaN         NaN         NaN  ...   \n",
              " 3         NaN         NaN         NaN         NaN         NaN  ...   \n",
              " 4         NaN         NaN         NaN         NaN         NaN  ...   \n",
              " \n",
              "    Unnamed: 991  Unnamed: 992  Unnamed: 993  Unnamed: 994  Unnamed: 995  \\\n",
              " 0           NaN           NaN           NaN           NaN           NaN   \n",
              " 1           NaN           NaN           NaN           NaN           NaN   \n",
              " 2           NaN           NaN           NaN           NaN           NaN   \n",
              " 3           NaN           NaN           NaN           NaN           NaN   \n",
              " 4           NaN           NaN           NaN           NaN           NaN   \n",
              " \n",
              "    Unnamed: 996  Unnamed: 997  Unnamed: 998  Unnamed: 999  Unnamed: 1000  \n",
              " 0           NaN           NaN           NaN           NaN            NaN  \n",
              " 1           NaN           NaN           NaN           NaN            NaN  \n",
              " 2           NaN           NaN           NaN           NaN            NaN  \n",
              " 3           NaN           NaN           NaN           NaN            NaN  \n",
              " 4           NaN           NaN           NaN           NaN            NaN  \n",
              " \n",
              " [5 rows x 1001 columns],\n",
              "    idcliente     nomecliente               email endereco       cep  \\\n",
              " 0        101      João Silva    joao@example.com    Rua A  20125535   \n",
              " 1        102    Maria Santos   maria@example.com    Av. B  25995770   \n",
              " 2        103  Pedro Oliveira   pedro@example.com  Praça C  37278465   \n",
              " 3        104        Ana Lima     ana@example.com    Rua D  49897703   \n",
              " 4        105    Carlos Souza  carlos@example.com    Av. E  30149335   \n",
              " \n",
              "                 estado          região  Unnamed: 7  Unnamed: 8  Unnamed: 9  \\\n",
              " 0          Mato Grosso  Centro - Oeste         NaN         NaN         NaN   \n",
              " 1  Rio Grande do Norte        Nordeste         NaN         NaN         NaN   \n",
              " 2              Sergipe        Nordeste         NaN         NaN         NaN   \n",
              " 3          Mato Grosso  Centro - Oeste         NaN         NaN         NaN   \n",
              " 4          Mato Grosso  Centro - Oeste         NaN         NaN         NaN   \n",
              " \n",
              "    ...  Unnamed: 991  Unnamed: 992  Unnamed: 993  Unnamed: 994  Unnamed: 995  \\\n",
              " 0  ...           NaN           NaN           NaN           NaN           NaN   \n",
              " 1  ...           NaN           NaN           NaN           NaN           NaN   \n",
              " 2  ...           NaN           NaN           NaN           NaN           NaN   \n",
              " 3  ...           NaN           NaN           NaN           NaN           NaN   \n",
              " 4  ...           NaN           NaN           NaN           NaN           NaN   \n",
              " \n",
              "    Unnamed: 996  Unnamed: 997  Unnamed: 998  Unnamed: 999  Unnamed: 1000  \n",
              " 0           NaN           NaN           NaN           NaN            NaN  \n",
              " 1           NaN           NaN           NaN           NaN            NaN  \n",
              " 2           NaN           NaN           NaN           NaN            NaN  \n",
              " 3           NaN           NaN           NaN           NaN            NaN  \n",
              " 4           NaN           NaN           NaN           NaN            NaN  \n",
              " \n",
              " [5 rows x 1001 columns])"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Carregar os dados das transações\n",
        "df_transacoes = pd.read_csv('/content/transacoes.csv')\n",
        "df_clientes = pd.read_csv('/content/dados_clientes.csv')\n",
        "\n",
        "# Visualizar os primeiros registros\n",
        "df_transacoes.head(), df_clientes.head()\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Converter a coluna 'Data_da_Transacao' para o tipo datetime\n",
        "df_transacoes['datatransacao'] = pd.to_datetime(df_transacoes['datatransacao'])"
      ],
      "metadata": {
        "id": "gKoGOIWmb9oW"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Remover 'R$' e converter 'Montante_da_Transacao' para float\n",
        "df_transacoes['montantetransacao'] = df_transacoes['montantetransacao'].replace({'R\\$ ': ''}, regex=True).astype(float)"
      ],
      "metadata": {
        "id": "TGYPWKNxcJgV"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Agrupar os montantes das transações por mês\n",
        "df_transacoes.set_index('datatransacao', inplace=True)\n",
        "df_mensal = df_transacoes.resample('M').sum()\n",
        "df_mensal.reset_index(inplace=True)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "id": "ZfL5kn1_cfTM",
        "outputId": "c0ac7fed-4a37-46d1-adfc-b270fad64606"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "\"None of ['datatransacao'] are in the columns\"",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-23-75282e05377a>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Agrupar os montantes das transações por mês\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdf_transacoes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'datatransacao'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mdf_mensal\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_transacoes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresample\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'M'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mdf_mensal\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mset_index\u001b[0;34m(self, keys, drop, append, inplace, verify_integrity)\u001b[0m\n\u001b[1;32m   5857\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5858\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmissing\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5859\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"None of {missing} are in the columns\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5860\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5861\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: \"None of ['datatransacao'] are in the columns\""
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n"
      ],
      "metadata": {
        "id": "GiQqoJVmgtge"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 5))\n",
        "plt.plot(df_mensal['datatransacao'], df_mensal['datatransacao'], marker='o')\n",
        "plt.title('Montante das Transações por Mês')\n",
        "plt.xlabel('Data')\n",
        "plt.ylabel('Montante')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "d7Sf8DTRgzFm",
        "outputId": "ceb63438-5017-49fa-f469-ceee74490c08"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA4kAAAHXCAYAAAARNR/7AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABsXElEQVR4nO3deVyVdf7//+cB2ZTFNDYVFZfCsrLcl1wQoVVNWtSZj/tYCZYy5TdHUzQdp2VyKdSaDCukTMctTZPcTbQidULLnNJsAVIbwCUR5f37wx/XeIZFJS8P4uN+u53bdN7X+7zf7+vJhePLazkOY4wRAAAAAACS3Fy9AAAAAABA5UGRCAAAAACwUCQCAAAAACwUiQAAAAAAC0UiAAAAAMBCkQgAAAAAsFAkAgAAAAAsFIkAAAAAAAtFIgAAgIv89ttveu655/TJJ5+4eikAYKFIBABc1ebPny+Hw6GDBw+6einXjG+++Ubh4eEKDw/Xhx9+qNTUVPXu3dvVy7oqjR8/XikpKXrkkUeUm5vr6uUAgCSKRACwTXHx4nA4tHXr1hLbjTEKCwuTw+HQfffdZ+tatm3bpsTExCvyl9C9e/cqMTGxShZtGzdutH6mF3pVZW+88YZuueUWxcbG6sEHH9TAgQM1aNAgVy/rijv/eEhJSSm1T8eOHeVwONS8efMS29LT07Vw4UJt2bJF999/vxISEuxeMgBclGquXgAAVHXe3t5KTU1Vp06dnNo3bdqkH3/8UV5eXravYdu2bZo0aZIGDRqkmjVr2jrX3r17NWnSJHXt2lUNGza0da4rrVmzZnrnnXec2saOHStfX1+NGzfORau68p566in5+PjIz89PiYmJKiws1HXXXefqZblM8e/4H//4R6f2gwcPatu2bfL29i71c999953++c9/KigoSNOnT9ff//535eXlKSAg4EosGwDKRJEIADa75557tGjRIs2aNUvVqv33j93U1FS1bNlSR44cceHqcCmCg4NLFAJ/+9vfdP3115doP19RUZFOnz5dZrFwtQkKCrL+29fX14Ursd+JEydUo0aNcvvcc889WrFihY4cOaLrr7/eak9NTVVwcLCaNm2q//znPyU+94c//MH6b29v72vqHxoAVG5cbgoANuvXr5+OHj2qtLQ0q+306dNavHix+vfvX+pnTpw4oT//+c8KCwuTl5eXbrzxRr300ksyxjj1czgcio+P17Jly9S8eXN5eXnp5ptv1po1a6w+iYmJevrppyVJ4eHh1uVxxZeDJicnKzIyUkFBQfLy8tJNN92kOXPmlFhTw4YNdd9992nr1q1q06aNvL291ahRI7399ttWn/nz5+uhhx6SJHXr1s2aa+PGjVaf1atX684771SNGjXk5+ene++9V3v27LmoLPfs2aPIyEj5+PioXr16mjJlioqKikr0W758ue69917VqVNHXl5eaty4sZ577jmdPXvWqd/+/fsVGxurkJAQeXt7q169eurbt6/y8vIuaj1lKf65LFiwQDfffLO8vLysn8lLL72kDh06qHbt2vLx8VHLli21ePHiMsco72crSceOHdOoUaPUsGFDeXl5KSgoSD169NAXX3xh9dmyZYseeugh1a9fX15eXgoLC9Po0aP122+/lZj366+/1sMPP6zAwED5+PjoxhtvLFG87Ny5U3fffbf8/f3l6+ur7t27a/v27SXGys3N1ahRo6zjuEmTJnr++edL/Mzee+89tWzZUn5+fvL399ctt9yimTNnlpvxwYMH5XA49NJLL2n69Olq0KCBfHx81KVLF2VmZpbov379euu4q1mzpnr16qWvvvrKqU9iYqIcDof27t2r/v3767rrritxBUBpevXqJS8vLy1atMipPTU1VQ8//LDc3d1L/VxKSopatmwpHx8f1apVS3379tUPP/zg1MeuYxQAysOZRACwWcOGDdW+fXu9++67uvvuuyWdK5Ty8vLUt29fzZo1y6m/MUY9e/bUhg0bNHToULVo0UIfffSRnn76af3000+aPn26U/+tW7dqyZIlGjFihPz8/DRr1izFxsbq0KFDql27tvr06aNvvvlG7777rqZPn26d6QgMDJQkzZkzRzfffLN69uypatWq6YMPPtCIESNUVFSkuLg4p7n+/e9/68EHH9TQoUM1cOBAvfnmmxo0aJBatmypm2++WZ07d9YTTzyhWbNm6S9/+YuaNWsmSdb/vvPOOxo4cKBiYmL0/PPP6+TJk5ozZ446deqknTt3lnt5anZ2trp166YzZ87omWeeUY0aNfT666/Lx8enRN/58+fL19dXCQkJ8vX11fr16zVhwgTl5+frxRdflHSuUI+JiVFBQYFGjhypkJAQ/fTTT1q5cqVyc3N/9yV/69ev1/vvv6/4+Hhdf/311r7NnDlTPXv21B/+8AedPn1a7733nh566CGtXLlS9957r9MYF/rZStJjjz2mxYsXKz4+XjfddJOOHj2qrVu36quvvtIdd9whSVq0aJFOnjypxx9/XLVr19ann36qV155RT/++KNTYfOvf/1Ld955pzw8PDR8+HA1bNhQ3377rT744ANNnTpV0rlC/c4775S/v7/GjBkjDw8Pvfbaa+ratas2bdqktm3bSpJOnjypLl266KefftKjjz6q+vXra9u2bRo7dqyysrI0Y8YMSVJaWpr69eun7t276/nnn5ckffXVV/rkk0/05JNPXjDnt99+W8eOHVNcXJxOnTqlmTNnKjIyUl9++aWCg4MlSR9//LHuvvtuNWrUSImJifrtt9/0yiuvqGPHjvriiy9KHHcPPfSQmjZtqr/+9a8l/mGmNNWrV1evXr307rvv6vHHH5ck7d69W3v27NEbb7yhf/3rXyU+M3XqVD377LN6+OGHNWzYMB0+fFivvPKKOnfurJ07d6pmzZq2H6MAUCYDALBFcnKykWQ+++wz8+qrrxo/Pz9z8uRJY4wxDz30kOnWrZsxxpgGDRqYe++91/rcsmXLjCQzZcoUp/EefPBB43A4zL///W+rTZLx9PR0atu9e7eRZF555RWr7cUXXzSSzIEDB0qss3hN54uJiTGNGjVyamvQoIGRZDZv3my1/fLLL8bLy8v8+c9/ttoWLVpkJJkNGzY4ff7YsWOmZs2a5k9/+pNTe3Z2tgkICCjR/r9GjRplJJkdO3Y4zR8QEFBi30rbp0cffdRUr17dnDp1yhhjzM6dO40ks2jRonLnvZCbb77ZdOnSxalNknFzczN79uwp0f9/13b69GnTvHlzExkZWWKMi/nZBgQEmLi4uHLXWFoe06ZNMw6Hw3z//fdWW+fOnY2fn59TmzHGFBUVWf/du3dv4+npab799lur7eeffzZ+fn6mc+fOVttzzz1natSoYb755hunsZ555hnj7u5uDh06ZIwx5sknnzT+/v7mzJkz5e7D/zpw4ICRZHx8fMyPP/5ote/YscNIMqNHj7baWrRoYYKCgszRo0ettt27dxs3NzczYMAAq23ixIlGkunXr99FrWHDhg3WMbRy5UrjcDis/Xr66aet36EuXbqYm2++2frcwYMHjbu7u5k6darTeF9++aWpVq2a1X65jlEAuFRcbgoAV8DDDz+s3377TStXrtSxY8e0cuXKMi81/fDDD+Xu7q4nnnjCqf3Pf/6zjDFavXq1U3tUVJQaN25svb/11lvl7++v77777qLWdv6ZuLy8PB05ckRdunTRd999V+KStptuukl33nmn9T4wMFA33njjRc2Vlpam3Nxc9evXT0eOHLFe7u7uatu2rTZs2FDu5z/88EO1a9dObdq0cZr//Pu6StunY8eO6ciRI7rzzjt18uRJff3115JknYX56KOPdPLkyQuu/1J16dJFN910U7lr+89//qO8vDzdeeedTpeHFruYn23NmjW1Y8cO/fzzz2Wu5fw5T5w4oSNHjqhDhw4yxmjnzp2SpMOHD2vz5s0aMmSI6tev7/T54qe1nj17VmvXrlXv3r3VqFEja3toaKj69++vrVu3Kj8/X9K5s5d33nmnrrvuOqefd1RUlM6ePavNmzdb6z9x4oTT5diXonfv3qpbt671vk2bNmrbtq0+/PBDSVJWVpZ27dqlQYMGqVatWla/W2+9VT169LD6ne+xxx675HVER0erVq1aeu+992SM0Xvvvad+/fqV2nfJkiUqKirSww8/7JRNSEiImjZtav0u2H2MAkBZKBIB4AoIDAxUVFSUUlNTtWTJEp09e1YPPvhgqX2///571alTR35+fk7txZdsfv/9907t//sXekm67rrrSn1QRmk++eQTRUVFWfdqBQYG6i9/+YsklSgSf89c+/fvlyRFRkYqMDDQ6bV27Vr98ssv5X7++++/V9OmTUu033jjjSXa9uzZowceeEABAQHy9/dXYGCg9WCZ4n0KDw9XQkKC3njjDV1//fWKiYlRUlLSZbvXKzw8vNT2lStXql27dvL29latWrUUGBioOXPmlDrvxeT9wgsvKDMzU2FhYWrTpo0SExNLFO2HDh2yiiRfX18FBgaqS5cukv6bR/FnSvuqhmKHDx/WyZMnS828WbNmKioqsu6p279/v9asWVPiZx0VFSVJ1s97xIgRuuGGG3T33XerXr16GjJkSIn7LstT2jFxww03WPfcFv++lLXmI0eO6MSJE07tZf3syuPh4aGHHnpIqamp2rx5s3744Ycy/yFo//79MsaoadOmJfL56quvrGzsPkYBoCzckwgAV0j//v31pz/9SdnZ2br77rsv21dRlPVQDHMR91J9++236t69uyIiIvTyyy8rLCxMnp6e+vDDDzV9+vQSDxj5PXMVj/XOO+8oJCSkxPbzn/z6e+Tm5qpLly7y9/fX5MmT1bhxY3l7e+uLL77Q//t//89pn/7+979r0KBBWr58udauXasnnnhC06ZN0/bt21WvXr3ftY7S7pXcsmWLevbsqc6dO2v27NkKDQ2Vh4eHkpOTlZqaWqL/xeT98MMP684779TSpUu1du1avfjii3r++ee1ZMkS3X333Tp79qx69OihX3/9Vf/v//0/RUREqEaNGvrpp580aNCgUh/8czkUFRWpR48eGjNmTKnbb7jhBknnnpS6a9cuffTRR1q9erVWr16t5ORkDRgwQG+99ZYta7uQ0n52F6N///6aO3euEhMTddttt5V6Jlk6l43D4dDq1atL/Rmf/8RYO49RACgLRSIAXCEPPPCAHn30UW3fvl0LFy4ss1+DBg308ccf69ixY05nE4svk2zQoMElz13Wl7t/8MEHKigo0IoVK5zOWl3o0s+KzFV82WRQUJB1NulSNGjQwDobeb59+/Y5vd+4caOOHj2qJUuWqHPnzlb7gQMHSh33lltu0S233KLx48dr27Zt6tixo+bOnaspU6Zc8hov5J///Ke8vb310UcfOX0/ZnJy8u8aNzQ0VCNGjNCIESP0yy+/6I477tDUqVN1991368svv9Q333yjt956SwMGDLA+87+XdxZfPlrak0GLBQYGqnr16iUyl84dn25ubgoLC5N07ud9/Pjxi/pZe3p66v7779f999+voqIijRgxQq+99pqeffZZNWnSpNzPlnZMfPPNN9bDaIp/X8pa8/XXX3/Br7i4WJ06dVL9+vW1ceNG6yE8pWncuLGMMQoPD7eK5fJcyWMUACQuNwWAK8bX11dz5sxRYmKi7r///jL73XPPPTp79qxeffVVp/bp06fL4XBYT0i9FMV/Cc7NzXVqLz6Lcf6Zqby8vN9VtJQ1V0xMjPz9/fXXv/5VhYWFJT53+PDhcse95557tH37dn366adOn1mwYIFTv9L26fTp05o9e7ZTv/z8fJ05c8ap7ZZbbpGbm5sKCgrKXUtFubu7y+FwOH0Vx8GDB7Vs2bIKjXf27NkSlx4GBQWpTp061j6UlocxpsRXTAQGBqpz58568803dejQIadtxZ91d3dXdHS0li9fbl3OKUk5OTlKTU1Vp06d5O/vL+ncGc709HR99NFHJdadm5trZX/06FGnbW5ubrr11lsl6aJ+DsuWLdNPP/1kvf/000+1Y8cO6/ckNDRULVq00FtvveV0TGZmZmrt2rW65557LjjHxXI4HJo1a5YmTpyo//u//yuzX58+feTu7q5JkyaVOAtvjLEyccUxCgASZxIB4IoaOHDgBfvcf//96tatm8aNG6eDBw/qtttu09q1a7V8+XKNGjXK6UEmF6tly5aSpHHjxqlv377y8PDQ/fffr+joaOsszqOPPqrjx4/rH//4h4KCgpSVlXXJ80hSixYt5O7urueff155eXny8vKyvodxzpw5+r//+z/dcccd6tu3rwIDA3Xo0CGtWrVKHTt2LFEYn2/MmDF65513dNddd+nJJ5+0vgKjQYMGTl8x0KFDB1133XUaOHCgnnjiCTkcDr3zzjsl/jK+fv16xcfH66GHHtINN9ygM2fO6J133pG7u7tiY2MrtO8Xcu+99+rll1/WXXfdpf79++uXX35RUlKSmjRpUurXJFzIsWPHVK9ePT344IO67bbb5Ovrq48//lifffaZ/v73v0uSIiIi1LhxYz311FP66aef5O/vr3/+85+l3kc6a9YsderUSXfccYeGDx+u8PBwHTx4UKtWrdKuXbskSVOmTFFaWpo6deqkESNGqFq1anrttddUUFCgF154wRrr6aef1ooVK3TfffdZX5Ny4sQJffnll1q8eLEOHjyo66+/XsOGDdOvv/6qyMhI1atXT99//71eeeUVtWjRwroPtzxNmjRRp06d9Pjjj6ugoEAzZsxQ7dq1nS5zffHFF3X33Xerffv2Gjp0qPUVGAEBAUpMTLzk3MvTq1cv9erVq9w+jRs31pQpUzR27FgdPHhQvXv3lp+fnw4cOKClS5dq+PDheuqpp1xyjAKAJL4CAwDscv5XYJTnf78Cw5hzXxcxevRoU6dOHePh4WGaNm1qXnzxRaevIjDm3NcklPb1Bw0aNDADBw50anvuuedM3bp1jZubm9NXRqxYscLceuutxtvb2zRs2NA8//zz5s033yzxtRKlrdOYc4/3/9+vgPjHP/5hGjVqZNzd3Ut8HcaGDRtMTEyMCQgIMN7e3qZx48Zm0KBB5vPPPy83J2OM+de//mW6dOlivL29Td26dc1zzz1n5s2bV2Ktn3zyiWnXrp3x8fExderUMWPGjDEfffSR01q+++47M2TIENO4cWPj7e1tatWqZbp162Y+/vjjC67jfGV9BUZZX0sxb94807RpU+Pl5WUiIiJMcnKy9dULFzPG+T/bgoIC8/TTT5vbbrvN+Pn5mRo1apjbbrvNzJ492+kze/fuNVFRUcbX19dcf/315k9/+pP1dRrJyclOfTMzM80DDzxg/P39jSRz4403mmeffdapzxdffGFiYmKMr6+vqV69uunWrZvZtm1bibUeO3bMjB071jRp0sR4enqa66+/3nTo0MG89NJL5vTp08YYYxYvXmyio6NNUFCQ8fT0NPXr1zePPvqoycrKKjW/YsVfgfHiiy+av//97yYsLMx4eXmZO++80+zevbtE/48//th07NjR+Pj4GH9/f3P//febvXv3OvUp/jkcPny43LmLnf8VGOX536/AKPbPf/7TdOrUydSoUcPUqFHDREREmLi4OLNv3z5jzOU7RgHgUjmMuYinDQAAgGtOVFSUxowZo+joaFcvpYSDBw8qPDxcL774op566ilXLwcAqhTuSQQAAKW6//77lZKS4uplAACuMO5JBAAATt59912dOHFCixYtUlBQkKuXAwC4wjiTCAAAnOzZs0fx8fH66aefuJQTAK5B3JMIAAAAALBwJhEAAAAAYKFIBAAAAABYXFokTps2Ta1bt5afn5+CgoLUu3dv7du3z6nPqVOnFBcXp9q1a8vX11exsbHKycmxtu/evVv9+vVTWFiYfHx81KxZM82cObPEXAUFBRo3bpwaNGggLy8vNWzYUG+++eYF15iUlKSGDRvK29tbbdu21aeffmptO3jwoBwOR6mvRYsW/Y5kAAAAAMA1XPp0002bNikuLk6tW7fWmTNn9Je//EXR0dHau3evatSoIUkaPXq0Vq1apUWLFikgIEDx8fHq06ePPvnkE0lSRkaGgoKClJKSorCwMG3btk3Dhw+Xu7u74uPjrbkefvhh5eTkaN68eWrSpImysrJUVFRU7voWLlyohIQEzZ07V23bttWMGTMUExOjffv2KSgoSGFhYcrKynL6zOuvv64XX3xRd99990VlUFRUpJ9//ll+fn5yOByXEh8AAACAKsQYo2PHjqlOnTpyc3Ph+TxTifzyyy9Gktm0aZMxxpjc3Fzj4eFhFi1aZPX56quvjCSTnp5e5jgjRoww3bp1s96vXr3aBAQEmKNHj17Setq0aWPi4uKs92fP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cebMGQ0bNkyjRo3S5s2bL+siAQAAAABXRoWKxM8//9ypQJSkatWqacyYMWrVqtVlWxwAAAAA4Mqq0OWm/v7+OnToUIn2H374QX5+fr97UQAAAAAA16hQkfjII49o6NChWrhwoX744Qf98MMPeu+99zRs2DD169fvcq8RAAAAAHCFVOhy05deekkOh0MDBgzQmTNnZIyRp6enHn/8cf3tb3+73GsEAAAAAFwhFSoSPT09NXPmTE2bNk3ffvutJKlx48aqXr36ZV0cAAAAAODKuqQicciQIRfV780336zQYgAAAAAArnVJ9yTOnz9fGzZsUG5urv7zn/+U+bpY06ZNU+vWreXn56egoCD17t1b+/btc+pz6tQpxcXFqXbt2vL19VVsbKxycnKs7bt371a/fv0UFhYmHx8fNWvWTDNnzixzzk8++UTVqlVTixYtLrg+Y4wmTJig0NBQ+fj4KCoqSvv373fqM3XqVHXo0EHVq1dXzZo1L3rfAQAAAKAyuqQziY8//rjeffddHThwQIMHD9Yf//hH1apVq8KTb9q0SXFxcWrdurXOnDmjv/zlL4qOjtbevXtVo0YNSee+k3HVqlVatGiRAgICFB8frz59+uiTTz6RJGVkZCgoKEgpKSkKCwvTtm3bNHz4cLm7uys+Pt5pvtzcXA0YMEDdu3d3KjTL8sILL2jWrFl66623FB4ermeffVYxMTHau3evvL29JUmnT5/WQw89pPbt22vevHkVzgIAAAAAKoNLKhKTkpL08ssva8mSJXrzzTc1duxY3XvvvRo6dKiio6PlcDguafI1a9Y4vZ8/f76CgoKUkZGhzp07Ky8vT/PmzVNqaqoiIyMlScnJyWrWrJm2b9+udu3albgEtlGjRkpPT9eSJUtKFImPPfaY+vfvL3d3dy1btqzctRljNGPGDI0fP169evWSJL399tsKDg7WsmXL1LdvX0nSpEmTrLUDAAAAwNXukh9c4+XlpX79+qlfv376/vvvNX/+fI0YMUJnzpzRnj175OvrW+HF5OXlSZJ1djIjI0OFhYWKioqy+kRERKh+/fpKT09Xu3btyhznf89wJicn67vvvlNKSoqmTJlywbUcOHBA2dnZTnMHBASobdu2Sk9Pt4rES1VQUKCCggLrfX5+viSpsLBQhYWFFRrzale839fq/tuNfO1FvvYiX3uRr/3I2D5k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xfHronwzMjK0a9cuDR069OJ2+P9X7ZJ645pUVFSkUaNGqWPHjmrevLkkKTs7W56eniXugwgODi7zXoBt27Zp4cKFWrVqVZlzvfTSSzp+/LgefvjhMvsUjx8cHHzRc8+bN08xMTGqV69emeO60pXIuF69ejp8+LDOnDmjxMREDRs2rMz1VCTjyqoqZHstH7/79+/XM888oy1btqhatYv7v6yqdPxKVSPfynwM25lvaGio5s6dq1atWqmgoEBvvPGGunbtqh07duiOO+4odRyO38qX77V6/H733XfaunWrvL29tXTpUh05ckQjRozQ0aNHlZycXOo4R44c0dmzZ0vN9+uvv/4de+oaVSHfefPmqVmzZurQocPF7rYkHlyDixAXF6fMzEy99957FR4jMzNTvXr10sSJExUdHV1qn9TUVE2aNEnvv/++goKCJEkLFiyQr6+v9dqyZcslz/3jjz/qo48+uuR/QbmSrkTGW7Zs0eeff665c+dqxowZevfddyVdnowrs6s922v5+D179qz69++vSZMm6YYbbij1c1X9+JWu/nwr+zFs558RN954ox599FG1bNlSHTp00JtvvqkOHTpYD7ji+L04rsz3Wj5+i4qK5HA4tGDBArVp00b33HOPXn75Zb311lv67bfftGXLFqd8FyxYcDl2qVK52vP97bfflJqaWqHjlzOJKFd8fLxWrlypzZs3O/0LWkhIiE6fPq3c3Fynf0nJyclRSEiI0xh79+5V9+7dNXz4cI0fP77Ued577z0NGzZMixYtcjqF3rNnT7Vt29Z6X7duXWVlZVlzhYaGOs1d2lP5kpOTVbt2bfXs2fOS9v1KuVIZh4eHS5JuueUW5eTkKDExUf369bssGVdWVSHba/n4PXbsmD7//HPt3LlT8fHxks79n6oxRtWqVdPatWur9PErVY18K/MxfKX+jDhfmzZttHXrVkmX5//jKrOqkO+1fPyGhoaqbt26CggIsNqaNWsmY4x+/PFHtWrVSrt27bK2BQcHy8vLS+7u7k5P+ixr7squKuS7ePFinTx5UgMGDLj0AC7pDkZcM4qKikxcXJypU6eO+eabb0psL75pd/HixVbb119/XeKm3czMTBMUFGSefvrpMudKTU013t7eZtmyZRe9tpCQEPPSSy9ZbXl5eaXedF5UVGTCw8PNn//854sa+0q6khn/r0mT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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Criando um modelo preditivo\n"
      ],
      "metadata": {
        "id": "OeazMh-AhN-A"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.tsa.arima.model import ARIMA\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "9F28VC47iqz7"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Ajustar o índice do DataFrame para o formato datetime\n",
        "df_mensal.set_index('datatransacao', inplace=True)"
      ],
      "metadata": {
        "id": "SsNmfO9KisDJ"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Criar e ajustar o modelo ARIMA\n",
        "modelo = ARIMA(df_mensal['montantetransacao'], order=(1, 1, 1))\n",
        "modelo_fit = modelo.fit()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9oKtW7jQiwvm",
        "outputId": "e23d2382-4f30-499d-8169-466cae4138c7"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/statespace/sarimax.py:866: UserWarning: Too few observations to estimate starting parameters for ARMA and trend. All parameters except for variances will be set to zeros.\n",
            "  warn('Too few observations to estimate starting parameters%s.'\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/statespace/mlemodel.py:1233: RuntimeWarning: divide by zero encountered in divide\n",
            "  np.inner(score_obs, score_obs) /\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/statespace/mlemodel.py:1233: RuntimeWarning: invalid value encountered in divide\n",
            "  np.inner(score_obs, score_obs) /\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fazer previsões para os próximos 3 meses\n",
        "previsoes = modelo_fit.forecast(steps=3)\n",
        "print(previsoes)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "joi69Fqci1kg",
        "outputId": "9305a8f2-035a-4155-ab5d-106c6eeca771"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1    3550.0\n",
            "2    3550.0\n",
            "3    3550.0\n",
            "Name: predicted_mean, dtype: float64\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n",
            "  return get_prediction_index(\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n",
            "  return get_prediction_index(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Criar um dataframe para os meses futuros\n",
        "futuras_datas = pd.date_range(start='2024-05-01', periods=3, freq='M')\n",
        "df_futuro = pd.DataFrame({'datatransao': futuras_datas, 'montantetransacao': previsoes})\n"
      ],
      "metadata": {
        "id": "pod1X5_Ci4fM"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Resetar o índice do DataFrame original\n",
        "df_mensal.reset_index(inplace=True)"
      ],
      "metadata": {
        "id": "m3Cn7jayi-45"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Concatenar os dados reais e futuros\n",
        "df_final = pd.concat([df_mensal, df_futuro])"
      ],
      "metadata": {
        "id": "qycZ-H0ajB5i"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualizar os dados reais e previstos para  os próximos 3 meses\n",
        "plt.figure(figsize=(10, 5))\n",
        "plt.plot(df_final['datatransacao'], df_final['montantetransacao'], marker='o', linestyle='-')\n",
        "plt.axvline(x=pd.to_datetime('2024-04-30'), color='r', linestyle='--')  # Linha para separar os dados reais das previsões\n",
        "plt.title('Montante das Transações por Mês com Previsões')\n",
        "plt.xlabel('Data')\n",
        "plt.ylabel('Montante')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "ul_JkaMdjD2E",
        "outputId": "7df73005-c94d-406d-e03b-191e1bb5d1b7"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
